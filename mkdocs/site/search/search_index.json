{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":""},{"location":"#map-everything-with-kmap-a-flexible-and-powerful-compose-multiplatform-mapping-library","title":"Map everything with KMaP: A flexible and powerful compose multiplatform mapping library","text":""},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Cross-Platform Compatibility: Use a single KMaP Composable in your common code for a consistent user experience across all platforms.</li> <li>Customizable Map Styles: Ability to customize the appearance of maps, including colors, labels, and themes.</li> <li>Interactive Elements: Features like zooming, panning, and rotating maps.</li> <li>Marker and Popup Support: Adding markers, popups, and tooltips to maps for enhanced interactivity.</li> <li>Layer Management: Support for multiple layers, including vector and raster layers.</li> <li>Clustering: Visualizing data density with clustering markers.</li> <li>Offline Maps: Ability to use maps without an internet connection.</li> <li>Projection Support: Handling different map projections and coordinate systems.</li> <li>Performance: Efficient rendering and handling of large datasets.</li> <li>Easy Integration: Seamlessly integrate KMaP into your existing projects.</li> <li>Customizable: Tailor the map's appearance and behavior to fit your needs.</li> </ul>"},{"location":"#usage-example","title":"Usage Example","text":"<p>With KMaP, you don't need a mapping source for each platform. Here's a simple example to get you started:</p> <pre><code>val motionController = rememberMotionController()\nval mapState = rememberMapState(mapProperties = OSMMapProperties())\n\nKMaP(\n    modifier = Modifier.size(300.dp, 600.dp),\n    motionController = motionController,\n    mapState = mapState,\n    canvasGestureListener = DefaultCanvasGestureListener()\n) {\n    canvas(tileSource =  OSMTileSource::getTile)\n}\n</code></pre>"}]}